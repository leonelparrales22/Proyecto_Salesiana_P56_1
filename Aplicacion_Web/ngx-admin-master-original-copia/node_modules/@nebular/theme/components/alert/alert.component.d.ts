/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { EventEmitter } from '@angular/core';
import { NbComponentSize } from '../component-size';
import { NbComponentStatus } from '../component-status';
import { NbBooleanInput } from '../helpers';
/**
 * Alert component.
 *
 * Basic alert example:
 * @stacked-example(Showcase, alert/alert-showcase.component)
 *
 * Alert configuration:
 *
 * ```html
 * <nb-alert status="success">
 *   You have been successfully authenticated!
 * </nb-alert>
 * ```
 * ### Installation
 *
 * Import `NbAlertModule` to your feature module.
 * ```ts
 * @NgModule({
 *   imports: [
 *     // ...
 *     NbAlertModule,
 *   ],
 * })
 * export class PageModule { }
 * ```
 * ### Usage
 *
 * Alert could additionally have a `close` button when `closable` property is set:
 * ```html
 * <nb-alert status="success" closable (close)="onClose()">
 *   You have been successfully authenticated!
 * </nb-alert>
 * ```
 *
 * Colored alerts could be simply configured by providing a `status` property:
 * @stacked-example(Alert status, alert/alert-colors.component)
 *
 * It is also possible to assign an `accent` property for a slight alert highlight
 * as well as combine it with `status`:
 * @stacked-example(Alert accent, alert/alert-accents.component)
 *
 * And `outline` property:
 * @stacked-example(Outline Alert, alert/alert-outline.component)
 *
 * @additional-example(Multiple Sizes, alert/alert-sizes.component)
 *
 * @styles
 *
 * alert-border-radius:
 * alert-bottom-margin:
 * alert-padding:
 * alert-scrollbar-color:
 * alert-scrollbar-background-color:
 * alert-scrollbar-width:
 * alert-shadow:
 * alert-text-font-family:
 * alert-text-font-size:
 * alert-text-font-weight:
 * alert-text-line-height:
 * alert-closable-start-padding:
 * alert-tiny-height:
 * alert-small-height:
 * alert-medium-height:
 * alert-medium-padding:
 * alert-large-height:
 * alert-giant-height:
 * alert-basic-background-color:
 * alert-basic-text-color:
 * alert-primary-background-color:
 * alert-primary-text-color:
 * alert-success-background-color:
 * alert-success-text-color:
 * alert-info-background-color:
 * alert-info-text-color:
 * alert-warning-background-color:
 * alert-warning-text-color:
 * alert-danger-background-color:
 * alert-danger-text-color:
 * alert-control-background-color:
 * alert-control-text-color:
 * alert-accent-basic-color:
 * alert-accent-primary-color:
 * alert-accent-info-color:
 * alert-accent-success-color:
 * alert-accent-warning-color:
 * alert-accent-danger-color:
 * alert-accent-control-color:
 * alert-outline-width:
 * alert-outline-basic-color:
 * alert-outline-primary-color:
 * alert-outline-info-color:
 * alert-outline-success-color:
 * alert-outline-warning-color:
 * alert-outline-danger-color:
 * alert-outline-control-color:
 */
import * as ɵngcc0 from '@angular/core';
export declare class NbAlertComponent {
    /**
     * Alert size, available sizes:
     * `tiny`, `small`, `medium`, `large`, `giant`
     * Unset by default.
     */
    size: '' | NbComponentSize;
    /**
     * Alert status (adds specific styles):
     * `basic` (default), `primary`, `success`, `info`, `warning`, `danger`, `control`.
     */
    get status(): NbComponentStatus;
    set status(value: NbComponentStatus);
    protected _status: NbComponentStatus;
    /**
     * Alert accent (color of the top border):
     * `basic`, `primary`, `success`, `info`, `warning`, `danger`, `control`.
     * Unset by default.
     */
    accent: '' | NbComponentStatus;
    /**
     * Alert outline (color of the border):
     * `basic`, `primary`, `success`, `info`, `warning`, `danger`, `control`.
     * Unset by default.
     */
    outline: '' | NbComponentStatus;
    /**
     * Shows `close` icon
     */
    get closable(): boolean;
    set closable(value: boolean);
    protected _closable: boolean;
    static ngAcceptInputType_closable: NbBooleanInput;
    /**
     * Emits when chip is removed
     * @type EventEmitter<any>
     */
    close: EventEmitter<any>;
    /**
     * Emits the removed chip event
     */
    onClose(): void;
    get tiny(): boolean;
    get small(): boolean;
    get medium(): boolean;
    get large(): boolean;
    get giant(): boolean;
    get primary(): boolean;
    get success(): boolean;
    get info(): boolean;
    get warning(): boolean;
    get danger(): boolean;
    get basic(): boolean;
    get control(): boolean;
    get primaryAccent(): boolean;
    get successAccent(): boolean;
    get infoAccent(): boolean;
    get warningAccent(): boolean;
    get dangerAccent(): boolean;
    get basicAccent(): boolean;
    get controlAccent(): boolean;
    get primaryOutline(): boolean;
    get successOutline(): boolean;
    get infoOutline(): boolean;
    get warningOutline(): boolean;
    get dangerOutline(): boolean;
    get basicOutline(): boolean;
    get controlOutline(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbAlertComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbAlertComponent, "nb-alert", never, {
    "size": "size";
    "accent": "accent";
    "outline": "outline";
    "status": "status";
    "closable": "closable";
}, {
    "close": "close";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWxlcnQuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImFsZXJ0LmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBeUdBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7QUFvRUEiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQWt2ZW8uIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKiBMaWNlbnNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UuIFNlZSBMaWNlbnNlLnR4dCBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICovXG5pbXBvcnQgeyBFdmVudEVtaXR0ZXIgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE5iQ29tcG9uZW50U2l6ZSB9IGZyb20gJy4uL2NvbXBvbmVudC1zaXplJztcbmltcG9ydCB7IE5iQ29tcG9uZW50U3RhdHVzIH0gZnJvbSAnLi4vY29tcG9uZW50LXN0YXR1cyc7XG5pbXBvcnQgeyBOYkJvb2xlYW5JbnB1dCB9IGZyb20gJy4uL2hlbHBlcnMnO1xuLyoqXG4gKiBBbGVydCBjb21wb25lbnQuXG4gKlxuICogQmFzaWMgYWxlcnQgZXhhbXBsZTpcbiAqIEBzdGFja2VkLWV4YW1wbGUoU2hvd2Nhc2UsIGFsZXJ0L2FsZXJ0LXNob3djYXNlLmNvbXBvbmVudClcbiAqXG4gKiBBbGVydCBjb25maWd1cmF0aW9uOlxuICpcbiAqIGBgYGh0bWxcbiAqIDxuYi1hbGVydCBzdGF0dXM9XCJzdWNjZXNzXCI+XG4gKiAgIFlvdSBoYXZlIGJlZW4gc3VjY2Vzc2Z1bGx5IGF1dGhlbnRpY2F0ZWQhXG4gKiA8L25iLWFsZXJ0PlxuICogYGBgXG4gKiAjIyMgSW5zdGFsbGF0aW9uXG4gKlxuICogSW1wb3J0IGBOYkFsZXJ0TW9kdWxlYCB0byB5b3VyIGZlYXR1cmUgbW9kdWxlLlxuICogYGBgdHNcbiAqIEBOZ01vZHVsZSh7XG4gKiAgIGltcG9ydHM6IFtcbiAqICAgICAvLyAuLi5cbiAqICAgICBOYkFsZXJ0TW9kdWxlLFxuICogICBdLFxuICogfSlcbiAqIGV4cG9ydCBjbGFzcyBQYWdlTW9kdWxlIHsgfVxuICogYGBgXG4gKiAjIyMgVXNhZ2VcbiAqXG4gKiBBbGVydCBjb3VsZCBhZGRpdGlvbmFsbHkgaGF2ZSBhIGBjbG9zZWAgYnV0dG9uIHdoZW4gYGNsb3NhYmxlYCBwcm9wZXJ0eSBpcyBzZXQ6XG4gKiBgYGBodG1sXG4gKiA8bmItYWxlcnQgc3RhdHVzPVwic3VjY2Vzc1wiIGNsb3NhYmxlIChjbG9zZSk9XCJvbkNsb3NlKClcIj5cbiAqICAgWW91IGhhdmUgYmVlbiBzdWNjZXNzZnVsbHkgYXV0aGVudGljYXRlZCFcbiAqIDwvbmItYWxlcnQ+XG4gKiBgYGBcbiAqXG4gKiBDb2xvcmVkIGFsZXJ0cyBjb3VsZCBiZSBzaW1wbHkgY29uZmlndXJlZCBieSBwcm92aWRpbmcgYSBgc3RhdHVzYCBwcm9wZXJ0eTpcbiAqIEBzdGFja2VkLWV4YW1wbGUoQWxlcnQgc3RhdHVzLCBhbGVydC9hbGVydC1jb2xvcnMuY29tcG9uZW50KVxuICpcbiAqIEl0IGlzIGFsc28gcG9zc2libGUgdG8gYXNzaWduIGFuIGBhY2NlbnRgIHByb3BlcnR5IGZvciBhIHNsaWdodCBhbGVydCBoaWdobGlnaHRcbiAqIGFzIHdlbGwgYXMgY29tYmluZSBpdCB3aXRoIGBzdGF0dXNgOlxuICogQHN0YWNrZWQtZXhhbXBsZShBbGVydCBhY2NlbnQsIGFsZXJ0L2FsZXJ0LWFjY2VudHMuY29tcG9uZW50KVxuICpcbiAqIEFuZCBgb3V0bGluZWAgcHJvcGVydHk6XG4gKiBAc3RhY2tlZC1leGFtcGxlKE91dGxpbmUgQWxlcnQsIGFsZXJ0L2FsZXJ0LW91dGxpbmUuY29tcG9uZW50KVxuICpcbiAqIEBhZGRpdGlvbmFsLWV4YW1wbGUoTXVsdGlwbGUgU2l6ZXMsIGFsZXJ0L2FsZXJ0LXNpemVzLmNvbXBvbmVudClcbiAqXG4gKiBAc3R5bGVzXG4gKlxuICogYWxlcnQtYm9yZGVyLXJhZGl1czpcbiAqIGFsZXJ0LWJvdHRvbS1tYXJnaW46XG4gKiBhbGVydC1wYWRkaW5nOlxuICogYWxlcnQtc2Nyb2xsYmFyLWNvbG9yOlxuICogYWxlcnQtc2Nyb2xsYmFyLWJhY2tncm91bmQtY29sb3I6XG4gKiBhbGVydC1zY3JvbGxiYXItd2lkdGg6XG4gKiBhbGVydC1zaGFkb3c6XG4gKiBhbGVydC10ZXh0LWZvbnQtZmFtaWx5OlxuICogYWxlcnQtdGV4dC1mb250LXNpemU6XG4gKiBhbGVydC10ZXh0LWZvbnQtd2VpZ2h0OlxuICogYWxlcnQtdGV4dC1saW5lLWhlaWdodDpcbiAqIGFsZXJ0LWNsb3NhYmxlLXN0YXJ0LXBhZGRpbmc6XG4gKiBhbGVydC10aW55LWhlaWdodDpcbiAqIGFsZXJ0LXNtYWxsLWhlaWdodDpcbiAqIGFsZXJ0LW1lZGl1bS1oZWlnaHQ6XG4gKiBhbGVydC1tZWRpdW0tcGFkZGluZzpcbiAqIGFsZXJ0LWxhcmdlLWhlaWdodDpcbiAqIGFsZXJ0LWdpYW50LWhlaWdodDpcbiAqIGFsZXJ0LWJhc2ljLWJhY2tncm91bmQtY29sb3I6XG4gKiBhbGVydC1iYXNpYy10ZXh0LWNvbG9yOlxuICogYWxlcnQtcHJpbWFyeS1iYWNrZ3JvdW5kLWNvbG9yOlxuICogYWxlcnQtcHJpbWFyeS10ZXh0LWNvbG9yOlxuICogYWxlcnQtc3VjY2Vzcy1iYWNrZ3JvdW5kLWNvbG9yOlxuICogYWxlcnQtc3VjY2Vzcy10ZXh0LWNvbG9yOlxuICogYWxlcnQtaW5mby1iYWNrZ3JvdW5kLWNvbG9yOlxuICogYWxlcnQtaW5mby10ZXh0LWNvbG9yOlxuICogYWxlcnQtd2FybmluZy1iYWNrZ3JvdW5kLWNvbG9yOlxuICogYWxlcnQtd2FybmluZy10ZXh0LWNvbG9yOlxuICogYWxlcnQtZGFuZ2VyLWJhY2tncm91bmQtY29sb3I6XG4gKiBhbGVydC1kYW5nZXItdGV4dC1jb2xvcjpcbiAqIGFsZXJ0LWNvbnRyb2wtYmFja2dyb3VuZC1jb2xvcjpcbiAqIGFsZXJ0LWNvbnRyb2wtdGV4dC1jb2xvcjpcbiAqIGFsZXJ0LWFjY2VudC1iYXNpYy1jb2xvcjpcbiAqIGFsZXJ0LWFjY2VudC1wcmltYXJ5LWNvbG9yOlxuICogYWxlcnQtYWNjZW50LWluZm8tY29sb3I6XG4gKiBhbGVydC1hY2NlbnQtc3VjY2Vzcy1jb2xvcjpcbiAqIGFsZXJ0LWFjY2VudC13YXJuaW5nLWNvbG9yOlxuICogYWxlcnQtYWNjZW50LWRhbmdlci1jb2xvcjpcbiAqIGFsZXJ0LWFjY2VudC1jb250cm9sLWNvbG9yOlxuICogYWxlcnQtb3V0bGluZS13aWR0aDpcbiAqIGFsZXJ0LW91dGxpbmUtYmFzaWMtY29sb3I6XG4gKiBhbGVydC1vdXRsaW5lLXByaW1hcnktY29sb3I6XG4gKiBhbGVydC1vdXRsaW5lLWluZm8tY29sb3I6XG4gKiBhbGVydC1vdXRsaW5lLXN1Y2Nlc3MtY29sb3I6XG4gKiBhbGVydC1vdXRsaW5lLXdhcm5pbmctY29sb3I6XG4gKiBhbGVydC1vdXRsaW5lLWRhbmdlci1jb2xvcjpcbiAqIGFsZXJ0LW91dGxpbmUtY29udHJvbC1jb2xvcjpcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJBbGVydENvbXBvbmVudCB7XG4gICAgLyoqXG4gICAgICogQWxlcnQgc2l6ZSwgYXZhaWxhYmxlIHNpemVzOlxuICAgICAqIGB0aW55YCwgYHNtYWxsYCwgYG1lZGl1bWAsIGBsYXJnZWAsIGBnaWFudGBcbiAgICAgKiBVbnNldCBieSBkZWZhdWx0LlxuICAgICAqL1xuICAgIHNpemU6ICcnIHwgTmJDb21wb25lbnRTaXplO1xuICAgIC8qKlxuICAgICAqIEFsZXJ0IHN0YXR1cyAoYWRkcyBzcGVjaWZpYyBzdHlsZXMpOlxuICAgICAqIGBiYXNpY2AgKGRlZmF1bHQpLCBgcHJpbWFyeWAsIGBzdWNjZXNzYCwgYGluZm9gLCBgd2FybmluZ2AsIGBkYW5nZXJgLCBgY29udHJvbGAuXG4gICAgICovXG4gICAgZ2V0IHN0YXR1cygpOiBOYkNvbXBvbmVudFN0YXR1cztcbiAgICBzZXQgc3RhdHVzKHZhbHVlOiBOYkNvbXBvbmVudFN0YXR1cyk7XG4gICAgcHJvdGVjdGVkIF9zdGF0dXM6IE5iQ29tcG9uZW50U3RhdHVzO1xuICAgIC8qKlxuICAgICAqIEFsZXJ0IGFjY2VudCAoY29sb3Igb2YgdGhlIHRvcCBib3JkZXIpOlxuICAgICAqIGBiYXNpY2AsIGBwcmltYXJ5YCwgYHN1Y2Nlc3NgLCBgaW5mb2AsIGB3YXJuaW5nYCwgYGRhbmdlcmAsIGBjb250cm9sYC5cbiAgICAgKiBVbnNldCBieSBkZWZhdWx0LlxuICAgICAqL1xuICAgIGFjY2VudDogJycgfCBOYkNvbXBvbmVudFN0YXR1cztcbiAgICAvKipcbiAgICAgKiBBbGVydCBvdXRsaW5lIChjb2xvciBvZiB0aGUgYm9yZGVyKTpcbiAgICAgKiBgYmFzaWNgLCBgcHJpbWFyeWAsIGBzdWNjZXNzYCwgYGluZm9gLCBgd2FybmluZ2AsIGBkYW5nZXJgLCBgY29udHJvbGAuXG4gICAgICogVW5zZXQgYnkgZGVmYXVsdC5cbiAgICAgKi9cbiAgICBvdXRsaW5lOiAnJyB8IE5iQ29tcG9uZW50U3RhdHVzO1xuICAgIC8qKlxuICAgICAqIFNob3dzIGBjbG9zZWAgaWNvblxuICAgICAqL1xuICAgIGdldCBjbG9zYWJsZSgpOiBib29sZWFuO1xuICAgIHNldCBjbG9zYWJsZSh2YWx1ZTogYm9vbGVhbik7XG4gICAgcHJvdGVjdGVkIF9jbG9zYWJsZTogYm9vbGVhbjtcbiAgICBzdGF0aWMgbmdBY2NlcHRJbnB1dFR5cGVfY2xvc2FibGU6IE5iQm9vbGVhbklucHV0O1xuICAgIC8qKlxuICAgICAqIEVtaXRzIHdoZW4gY2hpcCBpcyByZW1vdmVkXG4gICAgICogQHR5cGUgRXZlbnRFbWl0dGVyPGFueT5cbiAgICAgKi9cbiAgICBjbG9zZTogRXZlbnRFbWl0dGVyPGFueT47XG4gICAgLyoqXG4gICAgICogRW1pdHMgdGhlIHJlbW92ZWQgY2hpcCBldmVudFxuICAgICAqL1xuICAgIG9uQ2xvc2UoKTogdm9pZDtcbiAgICBnZXQgdGlueSgpOiBib29sZWFuO1xuICAgIGdldCBzbWFsbCgpOiBib29sZWFuO1xuICAgIGdldCBtZWRpdW0oKTogYm9vbGVhbjtcbiAgICBnZXQgbGFyZ2UoKTogYm9vbGVhbjtcbiAgICBnZXQgZ2lhbnQoKTogYm9vbGVhbjtcbiAgICBnZXQgcHJpbWFyeSgpOiBib29sZWFuO1xuICAgIGdldCBzdWNjZXNzKCk6IGJvb2xlYW47XG4gICAgZ2V0IGluZm8oKTogYm9vbGVhbjtcbiAgICBnZXQgd2FybmluZygpOiBib29sZWFuO1xuICAgIGdldCBkYW5nZXIoKTogYm9vbGVhbjtcbiAgICBnZXQgYmFzaWMoKTogYm9vbGVhbjtcbiAgICBnZXQgY29udHJvbCgpOiBib29sZWFuO1xuICAgIGdldCBwcmltYXJ5QWNjZW50KCk6IGJvb2xlYW47XG4gICAgZ2V0IHN1Y2Nlc3NBY2NlbnQoKTogYm9vbGVhbjtcbiAgICBnZXQgaW5mb0FjY2VudCgpOiBib29sZWFuO1xuICAgIGdldCB3YXJuaW5nQWNjZW50KCk6IGJvb2xlYW47XG4gICAgZ2V0IGRhbmdlckFjY2VudCgpOiBib29sZWFuO1xuICAgIGdldCBiYXNpY0FjY2VudCgpOiBib29sZWFuO1xuICAgIGdldCBjb250cm9sQWNjZW50KCk6IGJvb2xlYW47XG4gICAgZ2V0IHByaW1hcnlPdXRsaW5lKCk6IGJvb2xlYW47XG4gICAgZ2V0IHN1Y2Nlc3NPdXRsaW5lKCk6IGJvb2xlYW47XG4gICAgZ2V0IGluZm9PdXRsaW5lKCk6IGJvb2xlYW47XG4gICAgZ2V0IHdhcm5pbmdPdXRsaW5lKCk6IGJvb2xlYW47XG4gICAgZ2V0IGRhbmdlck91dGxpbmUoKTogYm9vbGVhbjtcbiAgICBnZXQgYmFzaWNPdXRsaW5lKCk6IGJvb2xlYW47XG4gICAgZ2V0IGNvbnRyb2xPdXRsaW5lKCk6IGJvb2xlYW47XG59XG4iXX0=