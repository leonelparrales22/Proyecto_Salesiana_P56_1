/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { Subject } from 'rxjs';
import { NbBooleanInput } from '../helpers';
/**
 * An accordion allows to toggle the display of sections of content
 *
 * Basic example
 * @stacked-example(Showcase, accordion/accordion-showcase.component)
 *
 * ```ts
 * <nb-accordion>
 *  <nb-accordion-item>
 *   <nb-accordion-item-header>Product Details</nb-accordion-item-header>
 *   <nb-accordion-item-body>
 *     Item Content
 *   </nb-accordion-item-body>
 *  </nb-accordion-item>
 * </nb-accordion>
 * ```
 * ### Installation
 *
 * Import `NbAccordionModule` to your feature module.
 * ```ts
 * @NgModule({
 *   imports: [
 *     // ...
 *     NbAccordionModule,
 *   ],
 * })
 * export class PageModule { }
 * ```
 * ### Usage
 *
 * With `multi` mode accordion can have multiple items expanded:
 * @stacked-example(Multiple expanded items, accordion/accordion-multi.component)
 *
 * `NbAccordionItemComponent` has several methods, for example it is possible to trigger item click/toggle:
 * @stacked-example(Expand API, accordion/accordion-toggle.component)
 *
 * @styles
 *
 * accordion-border-radius:
 * accordion-padding:
 * accordion-shadow:
 * accordion-header-text-color:
 * accordion-header-text-font-family:
 * accordion-header-text-font-size:
 * accordion-header-text-font-weight:
 * accordion-header-text-line-height:
 * accordion-header-disabled-text-color:
 * accordion-header-border-color:
 * accordion-header-border-style:
 * accordion-header-border-width:
 * accordion-item-background-color:
 * accordion-item-text-color:
 * accordion-item-text-font-family:
 * accordion-item-text-font-size:
 * accordion-item-text-font-weight:
 * accordion-item-text-line-height:
 */
import * as ɵngcc0 from '@angular/core';
export declare class NbAccordionComponent {
    openCloseItems: Subject<boolean>;
    /**
     *  Allow multiple items to be expanded at the same time.
     * @type {boolean}
     */
    get multi(): boolean;
    set multi(val: boolean);
    static ngAcceptInputType_multi: NbBooleanInput;
    private multiValue;
    /**
     * Opens all enabled accordion items.
     */
    openAll(): void;
    /**
     * Closes all enabled accordion items.
     */
    closeAll(): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbAccordionComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbAccordionComponent, "nb-accordion", never, {
    "multi": "multi";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYWNjb3JkaW9uLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJhY2NvcmRpb24uY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBZ0VBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBa0JBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFrdmVvLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqL1xuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xuaW1wb3J0IHsgTmJCb29sZWFuSW5wdXQgfSBmcm9tICcuLi9oZWxwZXJzJztcbi8qKlxuICogQW4gYWNjb3JkaW9uIGFsbG93cyB0byB0b2dnbGUgdGhlIGRpc3BsYXkgb2Ygc2VjdGlvbnMgb2YgY29udGVudFxuICpcbiAqIEJhc2ljIGV4YW1wbGVcbiAqIEBzdGFja2VkLWV4YW1wbGUoU2hvd2Nhc2UsIGFjY29yZGlvbi9hY2NvcmRpb24tc2hvd2Nhc2UuY29tcG9uZW50KVxuICpcbiAqIGBgYHRzXG4gKiA8bmItYWNjb3JkaW9uPlxuICogIDxuYi1hY2NvcmRpb24taXRlbT5cbiAqICAgPG5iLWFjY29yZGlvbi1pdGVtLWhlYWRlcj5Qcm9kdWN0IERldGFpbHM8L25iLWFjY29yZGlvbi1pdGVtLWhlYWRlcj5cbiAqICAgPG5iLWFjY29yZGlvbi1pdGVtLWJvZHk+XG4gKiAgICAgSXRlbSBDb250ZW50XG4gKiAgIDwvbmItYWNjb3JkaW9uLWl0ZW0tYm9keT5cbiAqICA8L25iLWFjY29yZGlvbi1pdGVtPlxuICogPC9uYi1hY2NvcmRpb24+XG4gKiBgYGBcbiAqICMjIyBJbnN0YWxsYXRpb25cbiAqXG4gKiBJbXBvcnQgYE5iQWNjb3JkaW9uTW9kdWxlYCB0byB5b3VyIGZlYXR1cmUgbW9kdWxlLlxuICogYGBgdHNcbiAqIEBOZ01vZHVsZSh7XG4gKiAgIGltcG9ydHM6IFtcbiAqICAgICAvLyAuLi5cbiAqICAgICBOYkFjY29yZGlvbk1vZHVsZSxcbiAqICAgXSxcbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgUGFnZU1vZHVsZSB7IH1cbiAqIGBgYFxuICogIyMjIFVzYWdlXG4gKlxuICogV2l0aCBgbXVsdGlgIG1vZGUgYWNjb3JkaW9uIGNhbiBoYXZlIG11bHRpcGxlIGl0ZW1zIGV4cGFuZGVkOlxuICogQHN0YWNrZWQtZXhhbXBsZShNdWx0aXBsZSBleHBhbmRlZCBpdGVtcywgYWNjb3JkaW9uL2FjY29yZGlvbi1tdWx0aS5jb21wb25lbnQpXG4gKlxuICogYE5iQWNjb3JkaW9uSXRlbUNvbXBvbmVudGAgaGFzIHNldmVyYWwgbWV0aG9kcywgZm9yIGV4YW1wbGUgaXQgaXMgcG9zc2libGUgdG8gdHJpZ2dlciBpdGVtIGNsaWNrL3RvZ2dsZTpcbiAqIEBzdGFja2VkLWV4YW1wbGUoRXhwYW5kIEFQSSwgYWNjb3JkaW9uL2FjY29yZGlvbi10b2dnbGUuY29tcG9uZW50KVxuICpcbiAqIEBzdHlsZXNcbiAqXG4gKiBhY2NvcmRpb24tYm9yZGVyLXJhZGl1czpcbiAqIGFjY29yZGlvbi1wYWRkaW5nOlxuICogYWNjb3JkaW9uLXNoYWRvdzpcbiAqIGFjY29yZGlvbi1oZWFkZXItdGV4dC1jb2xvcjpcbiAqIGFjY29yZGlvbi1oZWFkZXItdGV4dC1mb250LWZhbWlseTpcbiAqIGFjY29yZGlvbi1oZWFkZXItdGV4dC1mb250LXNpemU6XG4gKiBhY2NvcmRpb24taGVhZGVyLXRleHQtZm9udC13ZWlnaHQ6XG4gKiBhY2NvcmRpb24taGVhZGVyLXRleHQtbGluZS1oZWlnaHQ6XG4gKiBhY2NvcmRpb24taGVhZGVyLWRpc2FibGVkLXRleHQtY29sb3I6XG4gKiBhY2NvcmRpb24taGVhZGVyLWJvcmRlci1jb2xvcjpcbiAqIGFjY29yZGlvbi1oZWFkZXItYm9yZGVyLXN0eWxlOlxuICogYWNjb3JkaW9uLWhlYWRlci1ib3JkZXItd2lkdGg6XG4gKiBhY2NvcmRpb24taXRlbS1iYWNrZ3JvdW5kLWNvbG9yOlxuICogYWNjb3JkaW9uLWl0ZW0tdGV4dC1jb2xvcjpcbiAqIGFjY29yZGlvbi1pdGVtLXRleHQtZm9udC1mYW1pbHk6XG4gKiBhY2NvcmRpb24taXRlbS10ZXh0LWZvbnQtc2l6ZTpcbiAqIGFjY29yZGlvbi1pdGVtLXRleHQtZm9udC13ZWlnaHQ6XG4gKiBhY2NvcmRpb24taXRlbS10ZXh0LWxpbmUtaGVpZ2h0OlxuICovXG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYkFjY29yZGlvbkNvbXBvbmVudCB7XG4gICAgb3BlbkNsb3NlSXRlbXM6IFN1YmplY3Q8Ym9vbGVhbj47XG4gICAgLyoqXG4gICAgICogIEFsbG93IG11bHRpcGxlIGl0ZW1zIHRvIGJlIGV4cGFuZGVkIGF0IHRoZSBzYW1lIHRpbWUuXG4gICAgICogQHR5cGUge2Jvb2xlYW59XG4gICAgICovXG4gICAgZ2V0IG11bHRpKCk6IGJvb2xlYW47XG4gICAgc2V0IG11bHRpKHZhbDogYm9vbGVhbik7XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX211bHRpOiBOYkJvb2xlYW5JbnB1dDtcbiAgICBwcml2YXRlIG11bHRpVmFsdWU7XG4gICAgLyoqXG4gICAgICogT3BlbnMgYWxsIGVuYWJsZWQgYWNjb3JkaW9uIGl0ZW1zLlxuICAgICAqL1xuICAgIG9wZW5BbGwoKTogdm9pZDtcbiAgICAvKipcbiAgICAgKiBDbG9zZXMgYWxsIGVuYWJsZWQgYWNjb3JkaW9uIGl0ZW1zLlxuICAgICAqL1xuICAgIGNsb3NlQWxsKCk6IHZvaWQ7XG59XG4iXX0=