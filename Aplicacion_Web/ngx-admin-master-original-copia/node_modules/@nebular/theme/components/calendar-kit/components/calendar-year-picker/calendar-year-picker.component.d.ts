/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { EventEmitter, OnChanges, Type } from '@angular/core';
import { NbCalendarCell, NbCalendarSize, NbCalendarSizeValues } from '../../model';
import { NbDateService } from '../../services/date.service';
import { NbCalendarYearModelService } from '../../services/calendar-year-model.service';
import * as ɵngcc0 from '@angular/core';
export declare class NbCalendarYearPickerComponent<D> implements OnChanges {
    protected dateService: NbDateService<D>;
    protected yearModelService: NbCalendarYearModelService<D>;
    date: D;
    min: D;
    max: D;
    filter: (D: any) => boolean;
    set _cellComponent(cellComponent: Type<NbCalendarCell<D, D>>);
    cellComponent: Type<NbCalendarCell<D, D>>;
    size: NbCalendarSize;
    static ngAcceptInputType_size: NbCalendarSizeValues;
    year: D;
    yearChange: EventEmitter<D>;
    get large(): boolean;
    years: D[][];
    constructor(dateService: NbDateService<D>, yearModelService: NbCalendarYearModelService<D>);
    ngOnChanges(): void;
    onSelect(year: any): void;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbCalendarYearPickerComponent<any>>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbCalendarYearPickerComponent<any>, "nb-calendar-year-picker", never, {
    "size": "size";
    "_cellComponent": "cellComponent";
    "date": "date";
    "min": "min";
    "max": "max";
    "filter": "filter";
    "year": "year";
}, {
    "yearChange": "yearChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FsZW5kYXIteWVhci1waWNrZXIuY29tcG9uZW50LmQudHMiLCJzb3VyY2VzIjpbImNhbGVuZGFyLXllYXItcGlja2VyLmNvbXBvbmVudC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7Ozs7O0FBU0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWtCQSIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBBa3Zlby4gQWxsIFJpZ2h0cyBSZXNlcnZlZC5cbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgTGljZW5zZS4gU2VlIExpY2Vuc2UudHh0IGluIHRoZSBwcm9qZWN0IHJvb3QgZm9yIGxpY2Vuc2UgaW5mb3JtYXRpb24uXG4gKi9cbmltcG9ydCB7IEV2ZW50RW1pdHRlciwgT25DaGFuZ2VzLCBUeXBlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBOYkNhbGVuZGFyQ2VsbCwgTmJDYWxlbmRhclNpemUsIE5iQ2FsZW5kYXJTaXplVmFsdWVzIH0gZnJvbSAnLi4vLi4vbW9kZWwnO1xuaW1wb3J0IHsgTmJEYXRlU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2RhdGUuc2VydmljZSc7XG5pbXBvcnQgeyBOYkNhbGVuZGFyWWVhck1vZGVsU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2VzL2NhbGVuZGFyLXllYXItbW9kZWwuc2VydmljZSc7XG5leHBvcnQgZGVjbGFyZSBjbGFzcyBOYkNhbGVuZGFyWWVhclBpY2tlckNvbXBvbmVudDxEPiBpbXBsZW1lbnRzIE9uQ2hhbmdlcyB7XG4gICAgcHJvdGVjdGVkIGRhdGVTZXJ2aWNlOiBOYkRhdGVTZXJ2aWNlPEQ+O1xuICAgIHByb3RlY3RlZCB5ZWFyTW9kZWxTZXJ2aWNlOiBOYkNhbGVuZGFyWWVhck1vZGVsU2VydmljZTxEPjtcbiAgICBkYXRlOiBEO1xuICAgIG1pbjogRDtcbiAgICBtYXg6IEQ7XG4gICAgZmlsdGVyOiAoRDogYW55KSA9PiBib29sZWFuO1xuICAgIHNldCBfY2VsbENvbXBvbmVudChjZWxsQ29tcG9uZW50OiBUeXBlPE5iQ2FsZW5kYXJDZWxsPEQsIEQ+Pik7XG4gICAgY2VsbENvbXBvbmVudDogVHlwZTxOYkNhbGVuZGFyQ2VsbDxELCBEPj47XG4gICAgc2l6ZTogTmJDYWxlbmRhclNpemU7XG4gICAgc3RhdGljIG5nQWNjZXB0SW5wdXRUeXBlX3NpemU6IE5iQ2FsZW5kYXJTaXplVmFsdWVzO1xuICAgIHllYXI6IEQ7XG4gICAgeWVhckNoYW5nZTogRXZlbnRFbWl0dGVyPEQ+O1xuICAgIGdldCBsYXJnZSgpOiBib29sZWFuO1xuICAgIHllYXJzOiBEW11bXTtcbiAgICBjb25zdHJ1Y3RvcihkYXRlU2VydmljZTogTmJEYXRlU2VydmljZTxEPiwgeWVhck1vZGVsU2VydmljZTogTmJDYWxlbmRhclllYXJNb2RlbFNlcnZpY2U8RD4pO1xuICAgIG5nT25DaGFuZ2VzKCk6IHZvaWQ7XG4gICAgb25TZWxlY3QoeWVhcjogYW55KTogdm9pZDtcbn1cbiJdfQ==