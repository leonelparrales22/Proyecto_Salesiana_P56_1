/**
 * @license
 * Copyright Akveo. All Rights Reserved.
 * Licensed under the MIT License. See License.txt in the project root for license information.
 */
import { NbComponentSize } from '../component-size';
import { NbComponentStatus } from '../component-status';
/**
 * Component intended to be used within the `<nb-card>` component.
 * It adds styles for a preset header section.
 *
 * @styles
 *
 * card-header-text-color:
 * card-header-text-font-family:
 * card-header-text-font-size:
 * card-header-text-font-weight:
 * card-header-text-line-height:
 * card-header-basic-background-color:
 * card-header-basic-text-color:
 * card-header-primary-background-color:
 * card-header-primary-text-color:
 * card-header-info-background-color:
 * card-header-info-text-color:
 * card-header-success-background-color:
 * card-header-success-text-color:
 * card-header-warning-background-color:
 * card-header-warning-text-color:
 * card-header-danger-background-color:
 * card-header-danger-text-color:
 * card-header-control-background-color:
 * card-header-control-text-color:
 */
import * as ɵngcc0 from '@angular/core';
export declare class NbCardHeaderComponent {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbCardHeaderComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbCardHeaderComponent, "nb-card-header", never, {}, {}, never>;
}
/**
 * Component intended to be used within  the `<nb-card>` component.
 * Adds styles for a preset body section.
 */
export declare class NbCardBodyComponent {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbCardBodyComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbCardBodyComponent, "nb-card-body", never, {}, {}, never>;
}
/**
 * Component intended to be used within  the `<nb-card>` component.
 * Adds styles for a preset footer section.
 */
export declare class NbCardFooterComponent {
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbCardFooterComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbCardFooterComponent, "nb-card-footer", never, {}, {}, never>;
}
/**
 * Basic content container component.
 *
 * Basic card example:
 * @stacked-example(Showcase, card/card-showcase.component)
 *
 * Basic card configuration:
 *
 * ```html
 * <nb-card>
 *   <nb-card-body>
 *     Card
 *   </nb-card-body>
 * </nb-card>
 * ```
 *
 * ### Installation
 *
 * Import `NbCardModule` to your feature module.
 * ```ts
 * @NgModule({
 *   imports: [
 *     // ...
 *     NbCardModule,
 *   ],
 * })
 * export class PageModule { }
 * ```
 * ### Usage
 *
 * Card with header and footer:
 * @stacked-example(With Header & Footer, card/card-full.component)
 *
 * Most of the time main card content goes to `nb-card-body`,
 * so it is styled and aligned in accordance with the header and footer.
 * In case you need a higher level of control, you can pass contend directly to `nb-card`,
 * so `nb-card-body` styling will not be applied.
 *
 * Consider an example with `nb-list` component:
 * @stacked-example(Card with list, card/card-without-body.component)
 *
 * Colored cards could be simply configured by providing a `status` property:
 * @stacked-example(Colored Card, card/card-colors.component)
 *
 * It is also possible to assign an `accent` property for a slight card highlight
 * as well as combine it with `status`:
 * @stacked-example(Accent Card, card/card-accents.component)
 *
 * Cards of smaller sizes could be combined and put on the same row with a bigger card so they have the same heights.
 * @stacked-example(Card sizes combinations, card/card-sizes-combinations.component)
 *
 * @additional-example(Multiple Sizes, card/card-sizes.component)
 *
 * @styles
 *
 * card-background-color:
 * card-text-color:
 * card-text-font-family:
 * card-text-font-size:
 * card-text-font-weight:
 * card-text-line-height:
 * card-border-width:
 * card-border-style:
 * card-border-color:
 * card-border-radius:
 * card-padding:
 * card-shadow:
 * card-divider-color:
 * card-divider-style:
 * card-divider-width:
 * card-height-tiny:
 * card-height-small:
 * card-height-medium:
 * card-height-large:
 * card-height-giant:
 * card-margin-bottom:
 * card-scrollbar-color:
 * card-scrollbar-background-color:
 * card-scrollbar-width:
 */
export declare class NbCardComponent {
    /**
     * Card size, available sizes:
     * tiny, small, medium, large, giant
     */
    get size(): '' | NbComponentSize;
    set size(value: '' | NbComponentSize);
    _size: '' | NbComponentSize;
    /**
     * Card status:
     * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`
     */
    status: '' | NbComponentStatus;
    /**
     * Card accent (color of the top border):
     * `basic`, `primary`, `info`, `success`, `warning`, `danger`, `control`
     */
    accent: '' | NbComponentStatus;
    get tiny(): boolean;
    get small(): boolean;
    get medium(): boolean;
    get large(): boolean;
    get giant(): boolean;
    get primary(): boolean;
    get info(): boolean;
    get success(): boolean;
    get warning(): boolean;
    get danger(): boolean;
    get basic(): boolean;
    get control(): boolean;
    get hasAccent(): "" | "basic" | "primary" | "success" | "warning" | "danger" | "info" | "control";
    get primaryAccent(): boolean;
    get infoAccent(): boolean;
    get successAccent(): boolean;
    get warningAccent(): boolean;
    get dangerAccent(): boolean;
    get basicAccent(): boolean;
    get controlAccent(): boolean;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<NbCardComponent>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<NbCardComponent, "nb-card", never, {
    "status": "status";
    "accent": "accent";
    "size": "size";
}, {}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2FyZC5jb21wb25lbnQuZC50cyIsInNvdXJjZXMiOlsiY2FyZC5jb21wb25lbnQuZC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQWlDQTs7O0FBQ0E7Ozs7Ozs7O0FBTUE7Ozs7Ozs7O0FBTUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBdUhBIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEFrdmVvLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTGljZW5zZS50eHQgaW4gdGhlIHByb2plY3Qgcm9vdCBmb3IgbGljZW5zZSBpbmZvcm1hdGlvbi5cbiAqL1xuaW1wb3J0IHsgTmJDb21wb25lbnRTaXplIH0gZnJvbSAnLi4vY29tcG9uZW50LXNpemUnO1xuaW1wb3J0IHsgTmJDb21wb25lbnRTdGF0dXMgfSBmcm9tICcuLi9jb21wb25lbnQtc3RhdHVzJztcbi8qKlxuICogQ29tcG9uZW50IGludGVuZGVkIHRvIGJlIHVzZWQgd2l0aGluIHRoZSBgPG5iLWNhcmQ+YCBjb21wb25lbnQuXG4gKiBJdCBhZGRzIHN0eWxlcyBmb3IgYSBwcmVzZXQgaGVhZGVyIHNlY3Rpb24uXG4gKlxuICogQHN0eWxlc1xuICpcbiAqIGNhcmQtaGVhZGVyLXRleHQtY29sb3I6XG4gKiBjYXJkLWhlYWRlci10ZXh0LWZvbnQtZmFtaWx5OlxuICogY2FyZC1oZWFkZXItdGV4dC1mb250LXNpemU6XG4gKiBjYXJkLWhlYWRlci10ZXh0LWZvbnQtd2VpZ2h0OlxuICogY2FyZC1oZWFkZXItdGV4dC1saW5lLWhlaWdodDpcbiAqIGNhcmQtaGVhZGVyLWJhc2ljLWJhY2tncm91bmQtY29sb3I6XG4gKiBjYXJkLWhlYWRlci1iYXNpYy10ZXh0LWNvbG9yOlxuICogY2FyZC1oZWFkZXItcHJpbWFyeS1iYWNrZ3JvdW5kLWNvbG9yOlxuICogY2FyZC1oZWFkZXItcHJpbWFyeS10ZXh0LWNvbG9yOlxuICogY2FyZC1oZWFkZXItaW5mby1iYWNrZ3JvdW5kLWNvbG9yOlxuICogY2FyZC1oZWFkZXItaW5mby10ZXh0LWNvbG9yOlxuICogY2FyZC1oZWFkZXItc3VjY2Vzcy1iYWNrZ3JvdW5kLWNvbG9yOlxuICogY2FyZC1oZWFkZXItc3VjY2Vzcy10ZXh0LWNvbG9yOlxuICogY2FyZC1oZWFkZXItd2FybmluZy1iYWNrZ3JvdW5kLWNvbG9yOlxuICogY2FyZC1oZWFkZXItd2FybmluZy10ZXh0LWNvbG9yOlxuICogY2FyZC1oZWFkZXItZGFuZ2VyLWJhY2tncm91bmQtY29sb3I6XG4gKiBjYXJkLWhlYWRlci1kYW5nZXItdGV4dC1jb2xvcjpcbiAqIGNhcmQtaGVhZGVyLWNvbnRyb2wtYmFja2dyb3VuZC1jb2xvcjpcbiAqIGNhcmQtaGVhZGVyLWNvbnRyb2wtdGV4dC1jb2xvcjpcbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJDYXJkSGVhZGVyQ29tcG9uZW50IHtcbn1cbi8qKlxuICogQ29tcG9uZW50IGludGVuZGVkIHRvIGJlIHVzZWQgd2l0aGluICB0aGUgYDxuYi1jYXJkPmAgY29tcG9uZW50LlxuICogQWRkcyBzdHlsZXMgZm9yIGEgcHJlc2V0IGJvZHkgc2VjdGlvbi5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJDYXJkQm9keUNvbXBvbmVudCB7XG59XG4vKipcbiAqIENvbXBvbmVudCBpbnRlbmRlZCB0byBiZSB1c2VkIHdpdGhpbiAgdGhlIGA8bmItY2FyZD5gIGNvbXBvbmVudC5cbiAqIEFkZHMgc3R5bGVzIGZvciBhIHByZXNldCBmb290ZXIgc2VjdGlvbi5cbiAqL1xuZXhwb3J0IGRlY2xhcmUgY2xhc3MgTmJDYXJkRm9vdGVyQ29tcG9uZW50IHtcbn1cbi8qKlxuICogQmFzaWMgY29udGVudCBjb250YWluZXIgY29tcG9uZW50LlxuICpcbiAqIEJhc2ljIGNhcmQgZXhhbXBsZTpcbiAqIEBzdGFja2VkLWV4YW1wbGUoU2hvd2Nhc2UsIGNhcmQvY2FyZC1zaG93Y2FzZS5jb21wb25lbnQpXG4gKlxuICogQmFzaWMgY2FyZCBjb25maWd1cmF0aW9uOlxuICpcbiAqIGBgYGh0bWxcbiAqIDxuYi1jYXJkPlxuICogICA8bmItY2FyZC1ib2R5PlxuICogICAgIENhcmRcbiAqICAgPC9uYi1jYXJkLWJvZHk+XG4gKiA8L25iLWNhcmQ+XG4gKiBgYGBcbiAqXG4gKiAjIyMgSW5zdGFsbGF0aW9uXG4gKlxuICogSW1wb3J0IGBOYkNhcmRNb2R1bGVgIHRvIHlvdXIgZmVhdHVyZSBtb2R1bGUuXG4gKiBgYGB0c1xuICogQE5nTW9kdWxlKHtcbiAqICAgaW1wb3J0czogW1xuICogICAgIC8vIC4uLlxuICogICAgIE5iQ2FyZE1vZHVsZSxcbiAqICAgXSxcbiAqIH0pXG4gKiBleHBvcnQgY2xhc3MgUGFnZU1vZHVsZSB7IH1cbiAqIGBgYFxuICogIyMjIFVzYWdlXG4gKlxuICogQ2FyZCB3aXRoIGhlYWRlciBhbmQgZm9vdGVyOlxuICogQHN0YWNrZWQtZXhhbXBsZShXaXRoIEhlYWRlciAmIEZvb3RlciwgY2FyZC9jYXJkLWZ1bGwuY29tcG9uZW50KVxuICpcbiAqIE1vc3Qgb2YgdGhlIHRpbWUgbWFpbiBjYXJkIGNvbnRlbnQgZ29lcyB0byBgbmItY2FyZC1ib2R5YCxcbiAqIHNvIGl0IGlzIHN0eWxlZCBhbmQgYWxpZ25lZCBpbiBhY2NvcmRhbmNlIHdpdGggdGhlIGhlYWRlciBhbmQgZm9vdGVyLlxuICogSW4gY2FzZSB5b3UgbmVlZCBhIGhpZ2hlciBsZXZlbCBvZiBjb250cm9sLCB5b3UgY2FuIHBhc3MgY29udGVuZCBkaXJlY3RseSB0byBgbmItY2FyZGAsXG4gKiBzbyBgbmItY2FyZC1ib2R5YCBzdHlsaW5nIHdpbGwgbm90IGJlIGFwcGxpZWQuXG4gKlxuICogQ29uc2lkZXIgYW4gZXhhbXBsZSB3aXRoIGBuYi1saXN0YCBjb21wb25lbnQ6XG4gKiBAc3RhY2tlZC1leGFtcGxlKENhcmQgd2l0aCBsaXN0LCBjYXJkL2NhcmQtd2l0aG91dC1ib2R5LmNvbXBvbmVudClcbiAqXG4gKiBDb2xvcmVkIGNhcmRzIGNvdWxkIGJlIHNpbXBseSBjb25maWd1cmVkIGJ5IHByb3ZpZGluZyBhIGBzdGF0dXNgIHByb3BlcnR5OlxuICogQHN0YWNrZWQtZXhhbXBsZShDb2xvcmVkIENhcmQsIGNhcmQvY2FyZC1jb2xvcnMuY29tcG9uZW50KVxuICpcbiAqIEl0IGlzIGFsc28gcG9zc2libGUgdG8gYXNzaWduIGFuIGBhY2NlbnRgIHByb3BlcnR5IGZvciBhIHNsaWdodCBjYXJkIGhpZ2hsaWdodFxuICogYXMgd2VsbCBhcyBjb21iaW5lIGl0IHdpdGggYHN0YXR1c2A6XG4gKiBAc3RhY2tlZC1leGFtcGxlKEFjY2VudCBDYXJkLCBjYXJkL2NhcmQtYWNjZW50cy5jb21wb25lbnQpXG4gKlxuICogQ2FyZHMgb2Ygc21hbGxlciBzaXplcyBjb3VsZCBiZSBjb21iaW5lZCBhbmQgcHV0IG9uIHRoZSBzYW1lIHJvdyB3aXRoIGEgYmlnZ2VyIGNhcmQgc28gdGhleSBoYXZlIHRoZSBzYW1lIGhlaWdodHMuXG4gKiBAc3RhY2tlZC1leGFtcGxlKENhcmQgc2l6ZXMgY29tYmluYXRpb25zLCBjYXJkL2NhcmQtc2l6ZXMtY29tYmluYXRpb25zLmNvbXBvbmVudClcbiAqXG4gKiBAYWRkaXRpb25hbC1leGFtcGxlKE11bHRpcGxlIFNpemVzLCBjYXJkL2NhcmQtc2l6ZXMuY29tcG9uZW50KVxuICpcbiAqIEBzdHlsZXNcbiAqXG4gKiBjYXJkLWJhY2tncm91bmQtY29sb3I6XG4gKiBjYXJkLXRleHQtY29sb3I6XG4gKiBjYXJkLXRleHQtZm9udC1mYW1pbHk6XG4gKiBjYXJkLXRleHQtZm9udC1zaXplOlxuICogY2FyZC10ZXh0LWZvbnQtd2VpZ2h0OlxuICogY2FyZC10ZXh0LWxpbmUtaGVpZ2h0OlxuICogY2FyZC1ib3JkZXItd2lkdGg6XG4gKiBjYXJkLWJvcmRlci1zdHlsZTpcbiAqIGNhcmQtYm9yZGVyLWNvbG9yOlxuICogY2FyZC1ib3JkZXItcmFkaXVzOlxuICogY2FyZC1wYWRkaW5nOlxuICogY2FyZC1zaGFkb3c6XG4gKiBjYXJkLWRpdmlkZXItY29sb3I6XG4gKiBjYXJkLWRpdmlkZXItc3R5bGU6XG4gKiBjYXJkLWRpdmlkZXItd2lkdGg6XG4gKiBjYXJkLWhlaWdodC10aW55OlxuICogY2FyZC1oZWlnaHQtc21hbGw6XG4gKiBjYXJkLWhlaWdodC1tZWRpdW06XG4gKiBjYXJkLWhlaWdodC1sYXJnZTpcbiAqIGNhcmQtaGVpZ2h0LWdpYW50OlxuICogY2FyZC1tYXJnaW4tYm90dG9tOlxuICogY2FyZC1zY3JvbGxiYXItY29sb3I6XG4gKiBjYXJkLXNjcm9sbGJhci1iYWNrZ3JvdW5kLWNvbG9yOlxuICogY2FyZC1zY3JvbGxiYXItd2lkdGg6XG4gKi9cbmV4cG9ydCBkZWNsYXJlIGNsYXNzIE5iQ2FyZENvbXBvbmVudCB7XG4gICAgLyoqXG4gICAgICogQ2FyZCBzaXplLCBhdmFpbGFibGUgc2l6ZXM6XG4gICAgICogdGlueSwgc21hbGwsIG1lZGl1bSwgbGFyZ2UsIGdpYW50XG4gICAgICovXG4gICAgZ2V0IHNpemUoKTogJycgfCBOYkNvbXBvbmVudFNpemU7XG4gICAgc2V0IHNpemUodmFsdWU6ICcnIHwgTmJDb21wb25lbnRTaXplKTtcbiAgICBfc2l6ZTogJycgfCBOYkNvbXBvbmVudFNpemU7XG4gICAgLyoqXG4gICAgICogQ2FyZCBzdGF0dXM6XG4gICAgICogYGJhc2ljYCwgYHByaW1hcnlgLCBgaW5mb2AsIGBzdWNjZXNzYCwgYHdhcm5pbmdgLCBgZGFuZ2VyYCwgYGNvbnRyb2xgXG4gICAgICovXG4gICAgc3RhdHVzOiAnJyB8IE5iQ29tcG9uZW50U3RhdHVzO1xuICAgIC8qKlxuICAgICAqIENhcmQgYWNjZW50IChjb2xvciBvZiB0aGUgdG9wIGJvcmRlcik6XG4gICAgICogYGJhc2ljYCwgYHByaW1hcnlgLCBgaW5mb2AsIGBzdWNjZXNzYCwgYHdhcm5pbmdgLCBgZGFuZ2VyYCwgYGNvbnRyb2xgXG4gICAgICovXG4gICAgYWNjZW50OiAnJyB8IE5iQ29tcG9uZW50U3RhdHVzO1xuICAgIGdldCB0aW55KCk6IGJvb2xlYW47XG4gICAgZ2V0IHNtYWxsKCk6IGJvb2xlYW47XG4gICAgZ2V0IG1lZGl1bSgpOiBib29sZWFuO1xuICAgIGdldCBsYXJnZSgpOiBib29sZWFuO1xuICAgIGdldCBnaWFudCgpOiBib29sZWFuO1xuICAgIGdldCBwcmltYXJ5KCk6IGJvb2xlYW47XG4gICAgZ2V0IGluZm8oKTogYm9vbGVhbjtcbiAgICBnZXQgc3VjY2VzcygpOiBib29sZWFuO1xuICAgIGdldCB3YXJuaW5nKCk6IGJvb2xlYW47XG4gICAgZ2V0IGRhbmdlcigpOiBib29sZWFuO1xuICAgIGdldCBiYXNpYygpOiBib29sZWFuO1xuICAgIGdldCBjb250cm9sKCk6IGJvb2xlYW47XG4gICAgZ2V0IGhhc0FjY2VudCgpOiBcIlwiIHwgXCJiYXNpY1wiIHwgXCJwcmltYXJ5XCIgfCBcInN1Y2Nlc3NcIiB8IFwid2FybmluZ1wiIHwgXCJkYW5nZXJcIiB8IFwiaW5mb1wiIHwgXCJjb250cm9sXCI7XG4gICAgZ2V0IHByaW1hcnlBY2NlbnQoKTogYm9vbGVhbjtcbiAgICBnZXQgaW5mb0FjY2VudCgpOiBib29sZWFuO1xuICAgIGdldCBzdWNjZXNzQWNjZW50KCk6IGJvb2xlYW47XG4gICAgZ2V0IHdhcm5pbmdBY2NlbnQoKTogYm9vbGVhbjtcbiAgICBnZXQgZGFuZ2VyQWNjZW50KCk6IGJvb2xlYW47XG4gICAgZ2V0IGJhc2ljQWNjZW50KCk6IGJvb2xlYW47XG4gICAgZ2V0IGNvbnRyb2xBY2NlbnQoKTogYm9vbGVhbjtcbn1cbiJdfQ==