import { ElementRef, EventEmitter } from "@angular/core";
import { NgModel } from "@angular/forms";
import { CtrCompleter } from "./ctr-completer";
import * as ɵngcc0 from '@angular/core';
export declare class CtrInput {
    private completer;
    private ngModel;
    private el;
    clearSelected: boolean;
    clearUnselected: boolean;
    overrideSuggested: boolean;
    fillHighlighted: boolean;
    openOnFocus: boolean;
    openOnClick: boolean;
    selectOnClick: boolean;
    selectOnFocus: boolean;
    ngModelChange: EventEmitter<any>;
    private _searchStr;
    private _displayStr;
    private blurTimer;
    constructor(completer: CtrCompleter, ngModel: NgModel, el: ElementRef);
    keyupHandler(event: any): void;
    pasteHandler(event: any): void;
    keydownHandler(event: any): void;
    onBlur(event: any): void;
    onfocus(): void;
    onClick(event: any): void;
    get searchStr(): string;
    set searchStr(term: string);
    private handleSelection;
    private restoreSearchValue;
    private doBlur;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<CtrInput>;
    static ɵdir: ɵngcc0.ɵɵDirectiveDefWithMeta<CtrInput, "[ctrInput]", never, {
    "clearSelected": "clearSelected";
    "clearUnselected": "clearUnselected";
    "overrideSuggested": "overrideSuggested";
    "fillHighlighted": "fillHighlighted";
    "openOnFocus": "openOnFocus";
    "openOnClick": "openOnClick";
    "selectOnClick": "selectOnClick";
    "selectOnFocus": "selectOnFocus";
}, {
    "ngModelChange": "ngModelChange";
}, never>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY3RyLWlucHV0LmQudHMiLCJzb3VyY2VzIjpbImN0ci1pbnB1dC5kLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7O0FBR0E7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBNEJBIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IE5nTW9kZWwgfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcbmltcG9ydCB7IEN0ckNvbXBsZXRlciB9IGZyb20gXCIuL2N0ci1jb21wbGV0ZXJcIjtcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEN0cklucHV0IHtcbiAgICBwcml2YXRlIGNvbXBsZXRlcjtcbiAgICBwcml2YXRlIG5nTW9kZWw7XG4gICAgcHJpdmF0ZSBlbDtcbiAgICBjbGVhclNlbGVjdGVkOiBib29sZWFuO1xuICAgIGNsZWFyVW5zZWxlY3RlZDogYm9vbGVhbjtcbiAgICBvdmVycmlkZVN1Z2dlc3RlZDogYm9vbGVhbjtcbiAgICBmaWxsSGlnaGxpZ2h0ZWQ6IGJvb2xlYW47XG4gICAgb3Blbk9uRm9jdXM6IGJvb2xlYW47XG4gICAgb3Blbk9uQ2xpY2s6IGJvb2xlYW47XG4gICAgc2VsZWN0T25DbGljazogYm9vbGVhbjtcbiAgICBzZWxlY3RPbkZvY3VzOiBib29sZWFuO1xuICAgIG5nTW9kZWxDaGFuZ2U6IEV2ZW50RW1pdHRlcjxhbnk+O1xuICAgIHByaXZhdGUgX3NlYXJjaFN0cjtcbiAgICBwcml2YXRlIF9kaXNwbGF5U3RyO1xuICAgIHByaXZhdGUgYmx1clRpbWVyO1xuICAgIGNvbnN0cnVjdG9yKGNvbXBsZXRlcjogQ3RyQ29tcGxldGVyLCBuZ01vZGVsOiBOZ01vZGVsLCBlbDogRWxlbWVudFJlZik7XG4gICAga2V5dXBIYW5kbGVyKGV2ZW50OiBhbnkpOiB2b2lkO1xuICAgIHBhc3RlSGFuZGxlcihldmVudDogYW55KTogdm9pZDtcbiAgICBrZXlkb3duSGFuZGxlcihldmVudDogYW55KTogdm9pZDtcbiAgICBvbkJsdXIoZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgb25mb2N1cygpOiB2b2lkO1xuICAgIG9uQ2xpY2soZXZlbnQ6IGFueSk6IHZvaWQ7XG4gICAgZ2V0IHNlYXJjaFN0cigpOiBzdHJpbmc7XG4gICAgc2V0IHNlYXJjaFN0cih0ZXJtOiBzdHJpbmcpO1xuICAgIHByaXZhdGUgaGFuZGxlU2VsZWN0aW9uO1xuICAgIHByaXZhdGUgcmVzdG9yZVNlYXJjaFZhbHVlO1xuICAgIHByaXZhdGUgZG9CbHVyO1xufVxuIl19